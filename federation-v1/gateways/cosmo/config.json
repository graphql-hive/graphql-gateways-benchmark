{
  "engineConfig": {
    "defaultFlushInterval": "500",
    "datasourceConfigurations": [
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          { "typeName": "Query", "fieldNames": ["me", "user", "users"] },
          {
            "typeName": "User",
            "fieldNames": ["id", "name", "username", "birthday"]
          }
        ],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": {
            "url": { "staticVariableContent": "http://accounts:4001/graphql" },
            "method": "POST",
            "body": {},
            "baseUrl": {},
            "path": {}
          },
          "subscription": {
            "enabled": true,
            "url": { "staticVariableContent": "http://accounts:4001/graphql" }
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "extend type Query {\n  me: User\n  user(id: ID!): User\n  users: [User]\n}\n\ntype User @key(fields: \"id\") {\n  id: ID!\n  name: String\n  username: String\n  birthday: Int\n}\n\ndirective @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\n\ndirective @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT"
          },
          "upstreamSchema": {
            "key": "c2e480f6edc1b5c9dac001c3b73eba82222cf3c3"
          }
        },
        "requestTimeoutSeconds": "10",
        "id": "http://accounts:4001/graphql",
        "keys": [{ "typeName": "User", "selectionSet": "id" }]
      },
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          {
            "typeName": "Product",
            "fieldNames": ["inStock", "shippingEstimate", "upc"]
          }
        ],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": {
            "url": { "staticVariableContent": "http://inventory:4002/graphql" },
            "method": "POST",
            "body": {},
            "baseUrl": {},
            "path": {}
          },
          "subscription": {
            "enabled": true,
            "url": { "staticVariableContent": "http://inventory:4002/graphql" }
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "extend type Product @key(fields: \"upc\") {\n  upc: String! @external\n  weight: Int @external\n  price: Int @external\n  inStock: Boolean\n  shippingEstimate: Int @requires(fields: \"price weight\")\n}\n\ndirective @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\n\ndirective @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT"
          },
          "upstreamSchema": {
            "key": "f7b11b1cff74e3cd6b2d8492d52a8f98b77b155d"
          }
        },
        "requestTimeoutSeconds": "10",
        "id": "http://inventory:4002/graphql",
        "keys": [{ "typeName": "Product", "selectionSet": "upc" }],
        "requires": [
          {
            "typeName": "Product",
            "fieldName": "shippingEstimate",
            "selectionSet": "price weight"
          }
        ]
      },
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          { "typeName": "Query", "fieldNames": ["topProducts"] },
          {
            "typeName": "Product",
            "fieldNames": ["upc", "name", "price", "weight"]
          }
        ],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": {
            "url": { "staticVariableContent": "http://products:4003/graphql" },
            "method": "POST",
            "body": {},
            "baseUrl": {},
            "path": {}
          },
          "subscription": {
            "enabled": true,
            "url": { "staticVariableContent": "http://products:4003/graphql" }
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "type Product @key(fields: \"upc\") {\n  upc: String!\n  name: String\n  price: Int\n  weight: Int\n}\n\nextend type Query {\n  topProducts(first: Int = 5): [Product]\n}\n\ndirective @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\n\ndirective @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT"
          },
          "upstreamSchema": {
            "key": "bc383e3c6e7d1172a4ff9e785fe3958a08289d5f"
          }
        },
        "requestTimeoutSeconds": "10",
        "id": "http://products:4003/graphql",
        "keys": [{ "typeName": "Product", "selectionSet": "upc" }]
      },
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          { "typeName": "Product", "fieldNames": ["reviews", "upc"] },
          { "typeName": "User", "fieldNames": ["reviews", "id"] },
          {
            "typeName": "Review",
            "fieldNames": ["id", "body", "product", "author"]
          }
        ],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": {
            "url": { "staticVariableContent": "http://reviews:4004/graphql" },
            "method": "POST",
            "body": {},
            "baseUrl": {},
            "path": {}
          },
          "subscription": {
            "enabled": true,
            "url": { "staticVariableContent": "http://reviews:4004/graphql" }
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "extend type Product @key(fields: \"upc\") {\n  upc: String! @external\n  reviews: [Review]\n}\n\ntype Review @key(fields: \"id\") {\n  id: ID!\n  body: String\n  product: Product\n  author: User @provides(fields: \"username\")\n}\n\nextend type User @key(fields: \"id\") {\n  id: ID! @external\n  username: String @external\n  reviews: [Review]\n}\n\ndirective @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT\n\ndirective @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT"
          },
          "upstreamSchema": {
            "key": "b3067d38a59b838d3702985e3a302b725bcb4c2d"
          }
        },
        "requestTimeoutSeconds": "10",
        "id": "http://reviews:4004/graphql",
        "keys": [
          { "typeName": "Product", "selectionSet": "upc" },
          { "typeName": "User", "selectionSet": "id" },
          { "typeName": "Review", "selectionSet": "id" }
        ],
        "provides": [
          {
            "typeName": "Review",
            "fieldName": "author",
            "selectionSet": "username"
          }
        ]
      }
    ],
    "fieldConfigurations": [
      {
        "typeName": "Query",
        "fieldName": "user",
        "argumentsConfiguration": [
          { "name": "id", "sourceType": "FIELD_ARGUMENT" }
        ]
      },
      {
        "typeName": "Query",
        "fieldName": "topProducts",
        "argumentsConfiguration": [
          { "name": "first", "sourceType": "FIELD_ARGUMENT" }
        ]
      }
    ],
    "graphqlSchema": "directive @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype User {\n  id: ID!\n  name: String\n  username: String\n  birthday: Int\n  reviews: [Review]\n}\n\ntype Product {\n  upc: String!\n  name: String\n  price: Int\n  weight: Int\n  inStock: Boolean\n  shippingEstimate: Int\n  reviews: [Review]\n}\n\ntype Review {\n  id: ID!\n  body: String\n  product: Product\n  author: User\n}\n\ntype Query {\n  me: User\n  user(id: ID!): User\n  users: [User]\n  topProducts(first: Int = 5): [Product]\n}",
    "stringStorage": {
      "c2e480f6edc1b5c9dac001c3b73eba82222cf3c3": "schema {\n  query: Query\n}\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Query {\n  me: User\n  user(id: ID!): User\n  users: [User]\n}\n\ntype User @key(fields: \"id\") {\n  birthday: Int\n  id: ID!\n  name: String\n  username: String\n}\n\nscalar openfed__FieldSet",
      "f7b11b1cff74e3cd6b2d8492d52a8f98b77b155d": "directive @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Product @key(fields: \"upc\") {\n  inStock: Boolean\n  price: Int @external\n  shippingEstimate: Int @requires(fields: \"price weight\")\n  upc: String! @external\n  weight: Int @external\n}\n\nscalar openfed__FieldSet",
      "bc383e3c6e7d1172a4ff9e785fe3958a08289d5f": "schema {\n  query: Query\n}\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Product @key(fields: \"upc\") {\n  name: String\n  price: Int\n  upc: String!\n  weight: Int\n}\n\ntype Query {\n  topProducts(first: Int = 5): [Product]\n}\n\nscalar openfed__FieldSet",
      "b3067d38a59b838d3702985e3a302b725bcb4c2d": "directive @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Product @key(fields: \"upc\") {\n  reviews: [Review]\n  upc: String! @external\n}\n\ntype Review @key(fields: \"id\") {\n  author: User @provides(fields: \"username\")\n  body: String\n  id: ID!\n  product: Product\n}\n\ntype User @key(fields: \"id\") {\n  id: ID! @external\n  reviews: [Review]\n  username: String @external\n}\n\nscalar openfed__FieldSet"
    }
  },
  "subgraphs": [
    {
      "id": "0",
      "name": "accounts",
      "routingUrl": "http://accounts:4001/graphql"
    },
    {
      "id": "1",
      "name": "inventory",
      "routingUrl": "http://inventory:4002/graphql"
    },
    {
      "id": "2",
      "name": "products",
      "routingUrl": "http://products:4003/graphql"
    },
    {
      "id": "3",
      "name": "reviews",
      "routingUrl": "http://reviews:4004/graphql"
    }
  ]
}
