name: ramping-vus
on:
  pull_request: {}
  push:
    branches:
      - 'main'

jobs:
  benchmark:
    strategy:
      matrix:
        directory: [mesh, apollo-server, apollo-gateway-with-yoga, apollo-router, mercurius, wundergraph, stitching-federation-with-yoga]
    uses: ./.github/workflows/constant-vus-over-time.template.yaml
    name: ${{ matrix.directory }}
    with:
      gateway: ${{ matrix.directory }}
      vu: 1000
      time: 60s
      scenarioDir: scenarios/ramping-vus

  report:
    runs-on: ubuntu-latest
    needs: benchmark
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: download artifacts
        id: download
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn
          cache-dependency-path: |
            **/yarn.lock
      
      - name: install dependencies
        run: yarn install
        working-directory: scenarios/ramping-vus

      - name: generate report
        run: yarn generate-report ${{ steps.download.outputs.download-path }} 
        working-directory: scenarios/ramping-vus
        env:
          CF_IMAGES_LINK: ${{ secrets.CF_IMAGES_LINK }}
          CF_IMAGES_TOKEN: ${{ secrets.CF_IMAGES_TOKEN }}

      - name: publish report
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          header: ramping-vus
          path: scenarios/ramping-vus/result.md
        env:
          GITHUB_TOKEN: ${{ secrets.githubToken }}

      - name: copy report
        if: github.event_name == 'push'
        run: |
          cp scenarios/ramping-vus/result.md scenarios/ramping-vus/README.md

      - name: publish report
        uses: EndBug/add-and-commit@v9
        if: github.event_name == 'push'
        with:
          add: scenarios/ramping-vus/README.md
          message: 'Update results for scenario: ramping-vus'
          pull: '--rebase --autostash'
