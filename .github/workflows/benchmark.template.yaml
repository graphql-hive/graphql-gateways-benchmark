on:
  workflow_call:
    inputs:
      scenarioName:
        type: string
        required: true
      runner:
        type: string
        required: true
      mode:
        type: string
        required: true
      gateway:
        type: string
        required: true
      vu:
        type: number
        required: true
      time:
        type: string
        required: true
      cpuLimit:
        type: string
        required: true
      memoryLimit:
        type: string
        required: true
      subgraphDelayRange:
        type: string
        default: ""

jobs:
  test:
    runs-on: ${{ startsWith(inputs.runner, '{') && fromJSON(inputs.runner) || inputs.runner }}
    name: ${{ inputs.gateway }}
    steps:
      - name: adjust os
        run: |
          ulimit -n 10000

      - name: checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        
      - name: setup rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v2
        
      - name: run subgraphs
        run: |
          make run-subgraphs &

      - name: Setup K6
        run: |
          sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
          echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install k6=0.49.0

      - name: install
        run: ./install.sh
        working-directory: gateways/${{ inputs.gateway }}

      - name: wait for subgraphs
        uses: iFaxity/wait-on-action@main
        with:
          resource: http://localhost:4200/health

      - name: run benchmark (${{ inputs.time }})
        timeout-minutes: 600
        run: make test gateway=${{ inputs.gateway }} mode=${{ inputs.mode }}
        env:
          ACCOUNTS_SUBGRAPH_DELAY_MS: ${{ inputs.subgraphDelayRange }}
          INVENTORY_SUBGRAPH_DELAY_MS: ${{ inputs.subgraphDelayRange }}
          PRODUCTS_SUBGRAPH_DELAY_MS: ${{ inputs.subgraphDelayRange }}
          REVIEWS_SUBGRAPH_DELAY_MS: ${{ inputs.subgraphDelayRange }}
          BENCH_VUS: ${{ inputs.vu }}
          BENCH_OVER_TIME: ${{ inputs.time }}
          MEM_LIMIT: ${{ inputs.memoryLimit }}
          CPU_LIMIT: ${{ inputs.cpuLimit }}
          GATEWAY_CPUSET: 1-${{ inputs.cpuLimit }}

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: always()
        with:
          name: ${{ inputs.scenarioName }}_${{ inputs.gateway }}
          path: |
            gateways/${{ inputs.gateway }}/k6_summary.json
            gateways/${{ inputs.gateway }}/k6_summary.txt
            gateways/${{ inputs.gateway }}/gateway_log.txt
            gateways/${{ inputs.gateway }}/*.png
