on:
  workflow_call:
    inputs:
      stableRunner:
        type: boolean
        required: true
      scenarioDir:
        type: string
        required: true
      gateway: 
        type: string
        required: true
      vu: 
        type: number
        required: true
      time: 
        type: string
        required: true

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      runner: ${{ steps.step1.outputs.runner }}
    steps:
      - name: decide on runner
        id: step1
        run: |
          if [ ${{ github.event_name == 'pull_request' }} ]; then
            echo "runner=ubuntu-latest" >> $GITHUB_OUTPUT
          else
            echo 'runner={"group": "benchmark-runners"}' >> $GITHUB_OUTPUT
          fi

  test:
    needs: [setup]
    runs-on: ${{ needs.setup.outputs.runner }}
    timeout-minutes: 10
    name: benchmark
    steps:
      - name: adjust os 
        run: |
          ulimit -n 10000

      - name: checkout
        uses: actions/checkout@v3
        
      - name: Setup K6
        run: |
          sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
          echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install k6=0.43.1

      - name: run benchmark (${{ inputs.vu }} VUs over ${{ inputs.time }})
        timeout-minutes: 10
        working-directory: ${{ inputs.scenarioDir }} 
        run: ./run.sh ${{ inputs.gateway }}
        env:
          BENCH_VUS: ${{ inputs.vu }}
          BENCH_OVER_TIME: ${{ inputs.time }}

      - uses: actions/upload-artifact@v3
        with: 
          name: ${{ inputs.gateway }}
          path: |
            ${{ inputs.scenarioDir }}/${{ inputs.gateway }}/k6_summary.json
            ${{ inputs.scenarioDir }}/${{ inputs.gateway }}/k6_summary.txt
            ${{ inputs.scenarioDir }}/${{ inputs.gateway }}/gateway_log.txt
            ${{ inputs.scenarioDir }}/${{ inputs.gateway }}/*.png