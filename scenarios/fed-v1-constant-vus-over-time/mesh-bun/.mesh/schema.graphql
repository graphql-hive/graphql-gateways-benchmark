schema {
  query: Query
}

directive @external(reason: String) on OBJECT | FIELD_DEFINITION

directive @requires(fields: _FieldSet!) on FIELD_DEFINITION

directive @provides(fields: _FieldSet!) on FIELD_DEFINITION

directive @key(fields: _FieldSet!, resolvable: Boolean = true) repeatable on OBJECT | INTERFACE

directive @link(url: String!, as: String, for: link__Purpose, import: [link__Import]) repeatable on SCHEMA

directive @shareable repeatable on OBJECT | FIELD_DEFINITION

directive @inaccessible on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @tag(name: String!) repeatable on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @override(from: String!) on FIELD_DEFINITION

directive @composeDirective(name: String!) repeatable on SCHEMA

directive @extends on OBJECT | INTERFACE

type Query {
  _entities(representations: [_Any!]!): [_Entity]!
  _service: _Service!
  me: User
  user(id: ID!): User
  users: [User]
  topProducts(first: Int = 5): [Product]
}

union _Entity = User | Product | Review

scalar _Any

scalar _FieldSet

scalar link__Import

enum link__Purpose {
  SECURITY
  EXECUTION
}

type _Service {
  sdl: String
}

type User @key(fields: "id") {
  id: ID!
  reviews: [Review]
  name: String
  username: String
}

type Product @key(fields: "upc") {
  upc: String!
  inStock: Boolean
  shippingEstimate: Int @requires(fields: "price weight")
  reviews: [Review]
  name: String
  price: Int
  weight: Int
}

type Review @key(fields: "id") {
  id: ID!
  body: String
  author: User @provides(fields: "username")
  product: Product
}